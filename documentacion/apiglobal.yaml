openapi: 3.0.3
info:
  title: Swagger - OpenAPI 3.0
  description: |-
    Esto es un servidor de Tamerlan de muestra basado en la especificación OpenAPI 3.0. Puede obtener más información sobre Swagger en https://swagger.io.


    Algunos enlaces de la aplicación:
    - [Aplicación Web](http://115.91.10.12:8088/tamerlanv2)
    - [Api Rest](http://115.91.10.12:8087)

  contact:
    email: mcachi@sodimac.com.pe
  version: 1.0.11

servers:
  - url: http://127.0.0.1:8000/api/v1

paths:

  /auth/login:
    post:
      tags:
        - Auth
      summary: Inicio de sesión al sistema mediante Cuenta.
      description: ''
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                  description: Correo del usuario.
                  example: 'usuario@dominio.com'
                contrasena:
                  type: string
                  description: Contraseña del usuario.
                  example: 'contrasena1'
        required: true
      responses:
        '200':
          description: Operación exitosa
          headers:
            Host:
              $ref: '#components/schemas/HostDefault'
            X-Powered-By:
              description: Versión de lenguaje en cual se esta corriendo el API.
              schema:
                type: string
            X-Rate-Limit:
              description: Solicitudes permitidas por usuario.
              schema:
                type: integer
                format: int32
            Content-Type:
                description: El tipo de contenido que la API que retorna.
                schema:
                  type: string
            Cache-Control:
              description: Control de cache de la API.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: object
                    example: {
                      usuario: {
                          id: 1,
                          tipo_usuarios_id:  1,
                          nombre_completo: 'NOMBRE DEL USUARIO COMPLETO',
                          tipo_documentos: '1',
                          documento: '99999999',
                          correo: 'usuario@dominio.com',
                          accesos: '11111111-11111111-111111111',
                          permisos: '1111111111111111111111',
                          creado_el: '2024-01-01 00:00:00'
                        },                    
                      token: 'sedf3256448e4f684w4268344$FGsrfwe654rw'
                    }
                  estado: 
                    type: integer
                    example: 200
                  mensaje: 
                    type: string
                    example: 'Respuesta procesada correctamente.'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /auth/logout:
    get:
      tags:
        - Auth
      summary: Cerrar sesión del sistema.
      description: ''
      operationId: 'logout'
      parameters: []
      responses:
        default:
          description: Operación exitosa.
  /auth/reset-password:
    post:
      security:
        - bearerAuth: []
      tags:
        - Auth
      summary: Formulario de cambio reseteo de contraseña.
      description: ''
      operationId: 'resetPassword'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                password:
                  type: string
                  example: 'MiContra01#'
                repassword:
                  type: string
                  example: 'MiContra01#'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'

  /adm/apps:
    get:
      security:
        - bearerAuth: []
      tags:
        - Apps and Reports
      summary: Lista de aplicaciones registradas.
      description: ''
      operationId: 'iApp'
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Este parametro es para tener un máximo de datos que retorna la lista.
          required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
        - bearerAuth: []
      tags:
        - Apps and Reports
      summary: Api para registrar aplicaciones.
      description: ''
      operationId: 'sApp'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: nameAppExample
                description:
                  type: string
                  example: descriptionExampleApp
                icon:
                  type: string
                  example: fa fa-icons
                background:
                  type: string
                  example: '#ffffff'
                color:
                  type: string
                  example: '#ffffff'
                order_by:
                  type: integer
                  example: 1
                status:
                  description: 0 es inactivo, 1 es activo y 2 es app oculta
                  type: integer
                  enum:
                    - 0
                    - 1
                    - 2
                  example: 1
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/apps/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Apps and Reports
      summary: Api que retorna la información de una app en específica.
      description: ''
      operationId: 'eApp'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar la app.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
        - bearerAuth: []
      tags:
        - Apps and Reports
      summary: Api para actualizar aplicaciones especificas.
      description: ''
      operationId: 'uApp'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar la app.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: nameAppExampleAct
                description:
                  type: string
                  example: descriptionExampleAppAct
                icon:
                  type: string
                  example: fa fa-icons
                background:
                  type: string
                  example: '#ffffff'
                color:
                  type: string
                  example: '#ffffff'
                order_by:
                  type: integer
                  example: 1
                status:
                  description: 0 es inactivo, 1 es activo y 2 es app oculta
                  type: integer
                  enum:
                    - 0
                    - 1
                    - 2
                  example: 1
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Apps and Reports
      summary: Api que elimina una aplicación por medio de su id.
      description: ''
      operationId: 'dApp'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar la app.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/structure:
    get:
      security:
        - bearerAuth: []
      tags:
        - Apps and Reports
      summary: Api que retorna todas las aplicaciones y reportes para el control de permisos y accesos.
      description: ''
      operationId: 'structure'
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/reports:
    get:
      security:
        - bearerAuth: []
      tags:
        - Apps and Reports
      summary: Lista de reportes registradas.
      description: ''
      operationId: 'iReport'
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Este parametro es para tener un máximo de datos que retorna la lista.
          required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
        - bearerAuth: []
      tags:
        - Apps and Reports
      summary: Api para registrar reportes.
      description: ''
      operationId: 'sReport'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: nameReportExample
                description:
                  type: string
                  example: descriptionExampleReport
                icon:
                  type: string
                  example: fa fa-icons
                background:
                  type: string
                  example: '#ffffff'
                color:
                  type: string
                  example: '#ffffff'
                order_by:
                  type: integer
                  example: 1
                status:
                  description: 0 es inactivo, 1 es activo y 2 es report oculta.
                  type: integer
                  enum:
                    - 0
                    - 1
                    - 2
                  example: 1
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'

  /adm/menu:
    post:
      security:
        - bearerAuth: []
      tags:
        - "menu"
      summary: Api para registrar menu.
      description: ''
      operationId: 'store'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                app_id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: nameReportExample
                icon:
                  type: string
                  example: 'fa fa-icons'
                order_by:
                  type: integer
                  example: 1
                clasification_id:
                  type: integer
                  example: 10
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/menu/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "menu"
      summary: Api para obtener un menu especifico.
      description: ''
      operationId: 'edit'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
        - bearerAuth: []
      tags:
        - "menu"
      summary: Api para actualizar un menu en especifico.
      description: ''
      operationId: 'update'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                app_id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: nameReportExample
                icon:
                  type: string
                  example: 'fa fa-icons'
                order_by:
                  type: integer
                  example: 1
                clasification_id:
                  type: integer
                  example: 10
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      security:
        - bearerAuth: []
      tags:
        - "menu"
      summary: Api para eliminar un menu en especifico.
      description: ''
      operationId: 'destroy'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'

  /adm/submenu:
    post:
      security:
        - bearerAuth: []
      tags:
        - "submenu"
      summary: Api para registrar submenu.
      description: ''
      operationId: 'store'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                menu_id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: nameSubMenuExample
                order_by:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/submenu/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "submenu"
      summary: Api para obtener un submenu especifico.
      description: ''
      operationId: 'edit'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
        - bearerAuth: []
      tags:
        - "submenu"
      summary: Api para actualizar un submenu en especifico.
      description: ''
      operationId: 'update'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: nameSubMenuExample
                order_by:
                  type: integer
                  example: 1
                menu_id:
                  type: integer
                  example: 10
                status:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      security:
        - bearerAuth: []
      tags:
        - "submenu"
      summary: Api para eliminar un submenu en especifico.
      description: ''
      operationId: 'destroy'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'

  /adm/permission:
    post:
      security:
        - bearerAuth: []
      tags:
        - "permission"
      summary: Api para registrar un permiso/acceso.
      description: ''
      operationId: 'store'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: ['m', 'sm']
                  example: m
                name:
                  type: string
                  example: namePermission
                position:
                  type: integer
                  example: 1
                description:
                  type: string
                  example: descriptionPermission
                menu_id:
                  type: integer
                  example: 1
                sub_menu_id:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    get:
      security:
        - bearerAuth: []
      tags:
        - "permission"
      summary: Api para obtener un permiso/acceso especifico.
      description: ''
      operationId: 'edit'
      parameters:
        - in: query
          name: limit
          required: true
          schema:
            type: integer
          description: El número de datos que tiene como máximo la colección retornada.
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum: ['m', 'sm']
            example: m
          description: El tipo es para diferenciar si pertenece a un menu (m) o submenu (sm).
        - in: query
          name: edit_id
          required: true
          schema:
            type: integer
            example: 1
          description: Representa al id del menu o submenu anteriormente seleccionado.
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/permission/{id}:
    post:
      security:
        - bearerAuth: []
      tags:
        - "permission"
      summary: Api para actualizar un permiso/acceso en especifico.
      description: ''
      operationId: 'update'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: ['m', 'sm']
                  example: m
                name:
                  type: string
                  example: namePermission
                position:
                  type: integer
                  example: 1
                description:
                  type: string
                  example: descriptionPermission
                menu_id:
                  type: integer
                  example: 1
                sub_menu_id:
                  type: integer
                  example: 1
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      security:
        - bearerAuth: []
      tags:
        - "permission"
      summary: Api para eliminar un permiso/acceso en especifico.
      description: ''
      operationId: 'destroy'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'

  /adm/users:
    get:
      security:
        - bearerAuth: []
      tags:
        - "users"
      summary: Api para obtener usuarios del sistema.
      description: ''
      operationId: 'getAllUsers'
      parameters:
        - in: query
          name: search
          required: false
          schema:
            type: string
          description: Este campo sirve para buscar usuarios por nombre.
        - in: query
          name: limit
          required: true
          schema:
            type: integer
          description: El número de datos que tiene como máximo la colección retornada.
        - in: query
          name: status
          required: true
          schema:
            type: integer
          description: Este campo es para que retorne usuarios con un especifico estado.
        - in: query
          name: fd1
          required: false
          schema:
            type: integer
          description: Este campo es el TipoDeCuentaId por usuario.
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
          - bearerAuth: []
      tags:
        - "users"
      summary: Api para registrar un usuario al sistema.
      description: ''
      operationId: 'storeUser'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: nameUser
                document:
                  type: string
                  example: '01234567'
                email:
                  type: string
                  example: 'user@sodimac.com.pe'
                type_account_id:
                  type: integer
                  example: 1
                bodegas_id:
                  type: array
                  items:
                    type: string
                  example: [15, 91, 93, 10]
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/users/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "users"
      summary: Api para obtener un usuario especifico.
      description: ''
      operationId: 'edit'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
        - bearerAuth: []
      tags:
        - "users"
      summary: Api para actualizar un usuario en especifico.
      description: ''
      operationId: 'update'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: nameUser
                document:
                  type: string
                  example: '01234567'
                email:
                  type: string
                  example: 'user@sodimac.com.pe'
                type_account_id:
                  type: integer
                  example: 1
                bodegas_id:
                  type: array
                  items:
                    type: string
                  example: [15, 91, 93, 10]
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      security:
        - bearerAuth: []
      tags:
        - "users"
      summary: Api para eliminar un usuario en especifico.
      description: ''
      operationId: 'destroy'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'

  /adm/user-permissions/{id}:
    post:
      security:
        - bearerAuth: []
      tags:
        - "users"
      summary: Api para actualizar permisos/accesos de un usuario en especifico.
      description: ''
      operationId: 'updateAccess'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el usuario.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                apps:
                  type: array
                  items:
                    type: integer
                    enum: [0,1]
                  example: [1,1,0,1,1]
                menus:
                  type: array
                  items:
                    type: integer
                    enum: [0,1]
                  example: [1,1,0,1,1]
                submenus:
                  type: array
                  items:
                    type: integer
                    enum: [0,1]
                  example: [1,1,0,1,1]
                permissions:
                  type: array
                  items:
                    type: integer
                    enum: [0,1]
                  example: [1,1,0,1,1]
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'

  /adm/type-account:
    get:
      security:
        - bearerAuth: []
      tags:
        - "TipoDeCuenta"
      summary: Api para obtener los tipos de cuenta registradas en el sistema.
      description: ''
      operationId: 'getAll'
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
          - bearerAuth: []
      tags:
        - "TipoDeCuenta"
      summary: Api para registrar un tipo de cuenta al sistema.
      description: ''
      operationId: 'storeTypeAccount'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: name
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/type-account/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "TipoDeCuenta"
      summary: Api para obtener una tipo de cuenta en especifica.
      description: ''
      operationId: 'edit'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      security:
        - bearerAuth: []
      tags:
        - "TipoDeCuenta"
      summary: Api para actualizar un tipo de cuenta en especifico.
      description: ''
      operationId: 'update'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: name
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      security:
        - bearerAuth: []
      tags:
        - "TipoDeCuenta"
      summary: Api para eliminar un tipo de cuenta en especifica.
      description: ''
      operationId: 'destroy'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'

  /adm/type-account-pms/{id}:
    post:
      security:
        - bearerAuth: []
      tags:
        - "TipoDeCuenta"
      summary: Api para actualizar un tipo de cuenta en especifico.
      description: ''
      operationId: 'TypeAccountPms'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                apps:
                  type: array
                  items:
                    type: integer
                    enum: [0,1]
                  example: [1,1,0,1,1]
                menus:
                  type: array
                  items:
                    type: integer
                    enum: [0,1]
                  example: [1,1,0,1,1]
                submenus:
                  type: array
                  items:
                    type: integer
                    enum: [0,1]
                  example: [1,1,0,1,1]
                permissions:
                  type: array
                  items:
                    type: integer
                    enum: [0,1]
                  example: [1,1,0,1,1]
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'
  /adm/type-account-sync/{id}:
    post:
      security:
        - bearerAuth: []
      tags:
        - "TipoDeCuenta"
      summary: Api para actualizar un tipo de cuenta en especifico.
      description: ''
      operationId: 'updateTypeAccountSync'
      parameters:
        - name: id
          in: path
          description: 'El id es necesario para encontrar el registro.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/SuccessWithBodyDefault'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          $ref: '#/components/responses/BodyNotProccessed'
        '500':
          $ref: '#/components/responses/ServerError'


components:

  securitySchemes:
    bearerAuth:
      description: Token de sesión para realizar operaciones dentro de la aplicación.
      type: http
      scheme: bearer

  schemas:
    HostDefault:
      description: El host donde se encuentra la API.
      type: string
    AuthorizationDefault:
      description: El token del usuario en sesión (Bearer token).
      type: string
    XPoweredByDefault:
      description: Versión de lenguaje en cual se esta corriendo el API.
      type: string
    XRateLimitDefault:
      description: Solicitudes permitidas por usuario.
      type: integer
      format: int32
    ContentTypeDefault:
      description: El tipo de contenido que la API que retorna.
      type: string
    CacheControlDefault:
      description: Control de cache de la API.
      type: string

  responses:
    BodyNotProccessed:
      description: (Data No Procesada)  El formato de los datos de la solicitud no son los correctos o
        hay datos obligatorios que no enviados.
      content:
        application/json:
          schema:
            type: object
            properties:
              errores:
                type: array
                example: [
                  'campo1' : [
                    'el campo no puede ser....'
                  ],
                  'campo2' : [
                    'el campo no puede ser....', 
                    'el campo no puede ser....'
                  ]
                ]
              estado: 
                type: integer
                example: 422
              mensaje: 
                type: string
                example: 'No es posible procesar los datos enviados.'
    NotFound:
      description: (Not Found) No se ha encontrado la información.
    ServerError:
      description: Error de Servidor.
      content:
        application/json:
          schema:
            type: object
            properties:
              data: 
                type: array
              estado: 
                type: integer
                example: 500
              mensaje: 
                type: string
                example: 'No es posible conectarse al servidor.'
    UnauthorizedError:
      description: Token de acceso es invalido.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: 'Token es invalido'
    SuccessDefault:
      description: Operación exitosa
      headers:
        Host:
          $ref: '#components/schemas/HostDefault'
        X-Powered-By:
          $ref: '#components/schemas/XPoweredByDefault'
        X-Rate-Limit:
          $ref: '#components/schemas/XRateLimitDefault'
        Authorization:
          $ref: '#components/schemas/AuthorizationDefault'
        Content-Type:
          $ref: '#components/schemas/ContentTypeDefault'
        Cache-Control:
          $ref: '#components/schemas/CacheControlDefault'
    SuccessWithBodyDefault:
      description: Operación exitosa
      headers:
        Host:
          $ref: '#components/schemas/HostDefault'
        X-Powered-By:
          $ref: '#components/schemas/XPoweredByDefault'
        X-Rate-Limit:
          $ref: '#components/schemas/XRateLimitDefault'
        Authorization:
          $ref: '#components/schemas/AuthorizationDefault'
        Content-Type:
          $ref: '#components/schemas/ContentTypeDefault'
        Cache-Control:
          $ref: '#components/schemas/CacheControlDefault'
      content:
        application/json:
          schema:
            type: object
